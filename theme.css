/* @settings
name: ion
id: ion
settings:
  -
    id: colors
    title: Colors
    type: heading
    level: 2
  -
    id: base-h
    title: Base hue
    type: variable-number-slider
    default: 20
    min: 0
    max: 360
    step: 1
  -
    id: base-s
    title: Base saturation
    type: variable-number-slider
    default: 50
    min: 0
    max: 100
    step: 1
    format: "%"
  -
    id: base-l-p
    title: Base lightness
    type: variable-number-slider
    default: 85
    min: 0
    max: 100
    step: 1
  -
    id: bloom
    title: Bloom
    type: heading
    level: 2
  -
    id: bloom-fct
    title: Strength
    type: variable-number-slider
    default: .25
    min: 0
    max: 1
    step: .05
  -
    id: ion-threshold
    title: Threshold
    type: variable-number-slider
    default: 80
    min: 0
    max: 100
    step: 1
*/

/*Reset*/
.theme-dark {
  --color-base-00: #000;
  --color-base-10: #000;
  --color-base-20: #000;
  --color-base-25: #000;
  --color-base-30: #000;

  --color-base-50: #000;

  --color-base-70: #000;
  --color-base-100: #024;

  --tab-divider-color: #000;

  --background-modifier-border: transparent;
}

body {
  --bloom-fct: .25;
  --bloom-const: .1em;
  --bloom: calc(var(--bloom-const) * var(--bloom-fct));
  --ion-threshold: 80;

  --base-h: 20;
  --base-s: 50%;
  --base-l-p: 85;

  --ion-h: var(--base-h);
  --ion-s: var(--base-s);
  --ion-l-p: var(--base-l-p);
}

body {
  --text-normal: var(--ion-color);
}

*, ::-webkit-scrollbar-thumb {
  --ion-hs: var(--ion-h), var(--ion-s);
  --ion-l: calc(var(--ion-l-p) * 1%);
  --ion-color: hsl(var(--ion-h), var(--ion-s), var(--ion-l));
  --bloom-hsl: var(--ion-h), var(--ion-s), 50%;
  --bloom-color: hsl(var(--bloom-hsl));
  --bloom-size: calc(var(--bloom) * (var(--ion-l-p) - var(--ion-threshold)));
  --bloom-size-s: calc(var(--bloom-size) / 3);
  --bloom-size-m: calc(var(--bloom-size) * .75);
  --bloom-drop: drop-shadow(0px 0px var(--bloom-size-s) var(--bloom-color));
  --bloom-box: 0 0 var(--bloom-size-m) var(--bloom-size-m) hsla(var(--bloom-hsl), .3);
  --icon-bloom: var(--bloom-drop) var(--bloom-drop);
  --border-bloom: var(--bloom-box), var(--bloom-box) inset;
}

:root:root:root:root:root *,
:root ::marker {
  color: var(--ion-color);
}

* {
  text-shadow: 0 0 var(--bloom-size) var(--bloom-color), 0 0 min(calc(var(--bloom-size) / 2), 1em) var(--bloom-color);
}

.markdown-source-view.mod-cm6 .cm-content {
  caret-color: var(--ion-color);
}

/* Headings */
h1, .cm-header-1 { --ion-h: calc(10 + 0 * 50); }
h2, .cm-header-2 { --ion-h: calc(10 + 1 * 50); }
h3, .cm-header-3 { --ion-h: calc(10 + 2 * 50); }
h4, .cm-header-4 { --ion-h: calc(10 + 3 * 50); }
h5, .cm-header-5 { --ion-h: calc(10 + 4 * 50); }
h6, .cm-header-6 { --ion-h: calc(10 + 5 * 50); }

.inline-title, .cm-header,
h1, h2, h3, h4, h5, h6 {
  --ion-s: 100%;
  --ion-l-p: 90;
}

/* Scrollbars */
:root body:not(.native-scrollbars) ::-webkit-scrollbar-thumb {
  background-color: hsl(var(--ion-hs), var(--ion-l));
}

::-webkit-scrollbar-thumb {
  --ion-l-p: 15;
}
::-webkit-scrollbar-thumb:hover,
::-webkit-scrollbar-thumb:active {
  --ion-l-p: 70;
}


:is(textarea, input:is([type='text'], [type='search'], [type='email'],
  [type='password'], [type='number']))::placeholder {
  color: hsl(var(--ion-hs), 40%);
}


/* Links */
a, .cm-link, .cm-url, .cm-hmd-internal-link {
  --ion-h: var(--accent-h);
  --ion-s: var(--accent-s);
}
:hover:is(a, .cm-link, .cm-url, .cm-hmd-internal-link) {
  --ion-l-p: 100;
}

/* Icons */
.clickable-icon {
  --ion-h: var(--base-h); --ion-s: var(--base-s); --ion-l-p: var(--base-l-p);
}
:hover.clickable-icon {
  --ion-l-p: 150;
}

.callout-icon > .svg-icon {
  color: var(--ion-color);
  filter: var(--icon-bloom);
}

/* Text muted */
code, .cm-inline-code,
.HyperMD-codeblock,
.cm-hmd-frontmatter,
.setting-item-description
{
  --ion-l-p: 60;
}

/* Text faint */
.tree-item-self.is-collapsed, .search-empty-state, .tree-item-flair,
.cm-formatting-link,
.cm-comment,
.cm-formatting-quote,
.list-bullet
{
  --ion-l-p: 40;
}

/* Callouts */
.callout { --callout-h: 217; --callout-s: 100%; --callout-l-p: 63; } .callout:is([data-callout="abstract"], [data-callout="summary"], [data-callout="tldr"]) { --callout-h: 198; --callout-s: 100%; --callout-l-p: 50; } .callout:is([data-callout="info"], [data-callout="todo"]) { --callout-h: 187; --callout-s: 100%; --callout-l-p: 41; } .callout:is([data-callout="tip"], [data-callout="hint"], [data-callout="important"]) { --callout-h: 171; --callout-s: 100%; --callout-l-p: 37; } .callout:is([data-callout="success"], [data-callout="check"], [data-callout="done"]) { --callout-h: 144; --callout-s: 100%; --callout-l-p: 39; } .callout:is([data-callout="question"], [data-callout="help"], [data-callout="faq"]) { --callout-h: 96; --callout-s: 81%; --callout-l-p: 47; } .callout:is([data-callout="warning"], [data-callout="caution"], [data-callout="attention"]) { --callout-h: 34; --callout-s: 100%; --callout-l-p: 50; } .callout:is([data-callout="failure"], [data-callout="fail"], [data-callout="missing"]) { --callout-h: 0; --callout-s: 100%; --callout-l-p: 66; } .callout:is([data-callout="danger"], [data-callout="error"]) { --callout-h: 348; --callout-s: 99%; --callout-l-p: 54; } .callout[data-callout="bug"] { --callout-h: 338; --callout-s: 100%; --callout-l-p: 48; } .callout[data-callout="example"] { --callout-h: 255; --callout-s: 100%; --callout-l-p: 65; } .callout:is([data-callout="quote"], [data-callout="cite"]) { --callout-h: 0; --callout-s: 0%; --callout-l-p: 61; }

.callout {
  background-color: transparent;
  border-color: var(--ion-color);
  border-width: var(--size-2-1);
  box-shadow: var(--border-bloom);
}

.callout,
.callout-title, .callout-title *,
.callout-content, .callout-content p {
  --ion-h: var(--callout-h);
  --ion-s: var(--callout-s);
  --ion-l-p: 95;
}

/*to make shadow visible..*/
.markdown-source-view.mod-cm6 .cm-content > [contenteditable=false] {
  contain: none !important;
}
.cm-embed-block.markdown-rendered.cm-callout.show-indentation-guide {
  overflow: visible;
}

/* Buttons */
:root select.dropdown,
:root:root button {
  background-color: transparent;
}

:root select.dropdown,
button:not(.clickable-icon) {
  background-color: transparent;
  border: 1px solid var(--ion-color);
  box-shadow: var(--border-bloom);
}

:hover:is(button, .dropdown) {
  --ion-l-p: 100;
}

button.mod-cta {
  --ion-h: var(--accent-h);
  --ion-s: var(--accent-s);
  --ion-l-p: 90;
}

/* Slider */
:root:root:root input[type='range'] {
  background-color: var(--ion-color);

  --ion-l-p: 60;

  box-shadow: var(--bloom-box);
}

/* Warning */
.mod-warning {
  --ion-h: 0;
  --ion-s: 100%;
}

/* Bold */
strong, .cm-strong {
  --ion-l-p: 95;
}

/* Modal */
:root:root .modal,
.prompt,
.menu
{
  border-color: var(--ion-color);
  box-shadow: var(--border-bloom);
}

input.prompt-input,
.vertical-tab-header, .vertical-tab-content
{
  background-color: transparent;
}

:root input.prompt-input,
.prompt-instructions
{
  border: none;
}

/* Community item */
:root .community-item.is-selected {
  background-color: transparent;
  border-color: var(--ion-color);
}

.community-item.is-selected {
  --ion-h: var(--accent-h);
  --ion-s: var(--accent-s);
  --ion-l-p: 100;
  box-shadow: var(--border-bloom);
}

.community-item.is-selected:hover {
  --ion-l-p: 110;
}

/*
TODO
- differentiate border-bloom
*/

/* Settings */

:root:root :is(.horizontal-tab-nav-item, .vertical-tab-nav-item) {
  background-color: transparent;
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item) {
  border: 1px solid transparent;
}

.is-active:is(.horizontal-tab-nav-item, .vertical-tab-nav-item) {
  --ion-h: var(--accent-h);
  --ion-s: var(--accent-s);
  --ion-l-p: 90;
  box-shadow: var(--border-bloom);
  border-color: var(--ion-color);
}

:hover:is(.horizontal-tab-nav-item, .vertical-tab-nav-item) {
  --ion-l-p: 100;
}


:root:root:root:root .cm-transparent {
  color: transparent;
  text-shadow: none; 
}


.list-bullet:after {
  background-color: var(--ion-color);
}


.markdown-rendered hr, .cm-line hr {
  border-color: var(--ion-color);
  border-width: 1px;
  box-shadow: var(--border-bloom);
  border-radius: 100vmax;
}

/*Checkbox*/
:root:root input[type=checkbox] {
  border: 1px solid var(--ion-color);
  box-shadow: var(--border-bloom);
  background-color: transparent;
}

input[type=checkbox]:checked:after {
  background-color: var(--ion-color);
}

input[type=checkbox] {
  --ion-h: var(--accent-h);
  --ion-s: var(--accent-s);
  --ion-l-p: 60;
}

input[type=checkbox]:checked {
  --ion-l-p: 100;
}
